html {
  color: black;
  font-family: "nudista-web", "Nudista", "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif;
  font-size: 1.13194vw;
  line-height: 1.5; }

h1,
h2,
h3,
nav a,
a.goto,
h4,
h5,
h6 {
  font-family: "nudista-web", "Nudista", "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif;
  font-size: 1.333em;
  line-height: 1.2;
  margin: 0; }

p {
  margin: 0 0 0.75em; }

a {
  color: #1565c0;
  text-decoration: none;
  transition: color 150ms ease; }
  a:active, a:focus, a:hover {
    color: #104c90; }

hr {
  border-bottom: 1px solid rgba(240, 240, 240, 0.6);
  border-left: 0;
  border-right: 0;
  border-top: 0;
  margin: 1.5em 0; }

h1 {
  font-size: 4.875vw;
  letter-spacing: 0.175vw; }

h1, h3, nav a, a.goto {
  font-weight: 600; }

h2 {
  font-weight: 300;
  font-size: 2.0375vw; }

h2, h3, nav a, a.goto {
  letter-spacing: 0.525vw;
  line-height: 3.15vw; }

h3, nav a, a.goto {
  font-size: 1.925vw; }

@media only screen and (min-width: 1000px) {
  h1 {
    font-size: 2.70833vw;
    letter-spacing: 0.09722vw; }
  h1, h3, nav a, a.goto {
    font-weight: 600; }
  h2 {
    font-weight: 300;
    font-size: 1.13194vw; }
  h2, h3, nav a, a.goto {
    letter-spacing: 0.29167vw;
    line-height: 1.75vw; }
  h3, nav a, a.goto {
    font-size: 1.06944vw; } }

body {
  background: white;
  transition: opacity 300ms ease-in;
  visibility: hidden;
  opacity: 0; }

.wf-loading body {
  visibility: hidden;
  opacity: 0; }

.wf-active body {
  visibility: visible;
  opacity: 1; }

img {
  width: 100%;
  height: auto; }

nav {
  /* Rectangle 2: */
  position: relative;
  display: block;
  margin-top: 2vw;
  margin-right: 2vw; }
  nav a {
    font-weight: 700;
    border: 0.15vw solid #000000;
    border-radius: 0.1vw;
    text-transform: uppercase;
    padding: 2vw 2.4vw 1.6vw;
    float: right;
    transition: all 150ms ease-in; }
    @media only screen and (min-width: 1000px) {
      nav a {
        padding: 0.5vw 1.2vw 0.4vw; } }
    nav a:link, nav a:visited {
      color: black; }
    nav a:hover, nav a:active {
      color: white;
      background: black; }
  nav::after {
    clear: both;
    content: "";
    display: table; }

a.goto {
  text-transform: uppercase;
  position: relative; }
  a.goto:before {
    content: "";
    position: absolute;
    width: 100%;
    height: 0.2vw;
    bottom: -0.5vw;
    left: 0;
    background-color: #000;
    visibility: visible;
    -webkit-transform: scaleX(1);
            transform: scaleX(1);
    transition: all 0.3s ease-in-out 0s; }
  a.goto:link, a.goto:visited {
    color: black; }
  a.goto:hover:before, a.goto:active:before {
    -webkit-transform: scaleX(0);
            transform: scaleX(0); }

a:link, a:visited, a:hover, a:active {
  color: black; }

header.header {
  width: 100%;
  text-align: center;
  padding-top: 5vw;
  padding-bottom: 8vw; }
  header.header h1.logo {
    text-transform: uppercase;
    font-weight: 900; }
    header.header h1.logo a:link, header.header h1.logo a:visited {
      color: black; }
    @media only screen and (min-width: 1000px) {
      header.header h1.logo {
        font-size: 3.5vw;
        letter-spacing: 0.625vw; } }
  header.header h3.title, header.header nav a.title, nav header.header a.title, header.header a.title.goto {
    text-transform: uppercase;
    font-weight: 300; }

article header {
  margin-bottom: 3vw; }

article {
  position: relative;
  margin: 0 auto;
  width: 96%;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin-bottom: 10vw; }
  @media only screen and (min-width: 1000px) {
    article {
      width: 78.05556%; } }
  article figure {
    margin: 0;
    margin-bottom: 4vw; }

article.sevdaliza figure {
  width: 47%;
  margin-right: 6%; }

article.sevdaliza section.content {
  margin-top: 11vw;
  width: 47%; }

article.momentr figure {
  width: 80%;
  margin-left: 20%; }

article.momentr section.content {
  width: 80%; }
  @media only screen and (min-width: 1000px) {
    article.momentr section.content {
      width: 47%; } }

article.containr-affairs {
  width: 98%; }
  @media only screen and (min-width: 1000px) {
    article.containr-affairs {
      width: 90%; } }
  article.containr-affairs figure {
    width: 50%;
    margin-left: 0; }
    @media only screen and (min-width: 1000px) {
      article.containr-affairs figure {
        margin-left: 5%; } }
  article.containr-affairs section.content {
    position: absolute;
    width: 45%;
    left: 55%; }

article.woordfruit figure {
  width: 84%;
  margin-left: 8%;
  margin-right: 8%; }

article.rma {
  -ms-flex-direction: row-reverse;
      flex-direction: row-reverse; }
  article.rma figure {
    width: 80%; }
  article.rma section.content {
    position: absolute;
    left: 0;
    width: 50%;
    z-index: 9;
    margin-top: 0; }
    @media only screen and (min-width: 1000px) {
      article.rma section.content {
        margin-top: 6vw; } }

article.tsm figure {
  width: 80%;
  margin-right: 20%; }

article.tsm section.content {
  margin-left: 50%;
  width: 50%; }

footer {
  padding-bottom: 5vw; }
  footer h2, footer h3, footer nav a, nav footer a, footer a.goto {
    text-align: center; }

main.about header {
  text-align: center;
  margin-bottom: 5vw; }
  main.about header h1 {
    margin-bottom: 2vw; }

main.about figure {
  width: 60%; }

main.about section.content {
  width: 40%;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  text-align: center;
  margin-top: -10vw; }
  main.about section.content h2 {
    width: 100%;
    display: inline-block; }

main.about .lower {
  margin-top: -10vw; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
